import { useState, useEffect } from "react"
import { useRouter } from "next/router"
import firebase from "@/firebase/clientApp"

export default function Signin() {

	const [userWarning, setUserWarning] = useState('')
	const [guidelines, setGuidlines] = useState([
		"Please use your NMIMS email id throughout the form.",
		"Fill the form responsibly as this will auto-generate your CV once the form closes.",
		"Not all data fields will be used for the CV generation.",
		"Keywords field is supposed to summarize your profile/skillset/preferences.",
		"Please follow proper sentence case and avoid unnecessary capitalizations and hyphens(-). Insert space after commas.",
		"Kindly limit your Internship, Projects and Leadership roles to max. 6-8 fields (in total) so that the CV doesn't exceed 1 page.",
		"Internships, Projects and Leadership is capped at 8 inputs in total and Description is capped at 5 fields each entry",
		"Space out your description into 2-3 lines, and keep it as minimal as possible for each line, try to avoid long paragraphs.",
		"In the description field, do not write more than 100 words for each Internship/ Project",
		"Kindly upload your picture in formals (preferred).",
		"If a field is to be kept blank please do not add it, use the remove buttons.",
		"Contact placecomm team incase of queries or redressal of incorrect CV generated by software",
	])

	useEffect(() => {
		setTimeout(() => {
			setUserWarning('')
		}, 10000)
	}, [userWarning])

	const provider = new firebase.auth.GoogleAuthProvider()
	const router = useRouter()

	const handleSignin = async (e) => {
		e.preventDefault()
		firebase
			.auth()
			.signInWithPopup(provider)
			.then((result) => {
				const user = result.user
				if (user.email.split("@")[1] === "nmims.edu.in") {
					router.push("/form")
				} else {
					setUserWarning('Sign in with NMIMS email ID')
					user.delete().then(() => {
						router.reload()
					})
				}
			})
			.catch((error) => {
				console.log(error)
			})
	}

	return (
		<div className="mx-auto my-10 md:my-14 lg:my-16 p-3 w-11/12 md:w-9/12 lg:w-1/2 border grid place-items-center rounded-lg">
			<h1 className="mx-auto my-3 text-xl md:text-2xl lg:text-3xl">Guidelines</h1>
			<ul className="m-1 p-1 list-inside list-disc">
				{guidelines.map((guide, idx) => (
					<li key={idx} className="m-1 p-1 text-xs md:text-base lg:text-base">
						{guide}
					</li>
				))}
			</ul>
			<button
				onClick={handleSignin}
				className="mx-auto my-5 px-3 py-2 text-sm md:text-base lg:text-base rounded-md transition-all duration-500 text-white bg-blue-600 lg:hover:bg-blue-700"
			>
				Sign in with NMIMS ID
			</button>
			<span className='mx-auto my-5 px-3 py-2 text-red-600'>{userWarning}</span>
		</div>
	)
}
